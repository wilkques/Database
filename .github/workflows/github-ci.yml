name: TESTS

on:
  push:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['5.3', '5.6', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3']

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test
          MYSQL_USER: user
          MYSQL_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s

    steps:
    - name: PHP ${{ matrix.php-versions }} Test on ${{ matrix.operating-system }}
      uses: actions/checkout@v3

    - name: Wait for MySQL to be ready
      run: |
        for i in {1..30}; do
          if mysql -h 127.0.0.1 -P 3306 -u root -prootpassword -e "SELECT 1;" > /dev/null 2>&1; then
            echo "MySQL is up and running."
            exit 0
          fi
          echo "Waiting for MySQL..."
          sleep 5
        done
        echo "MySQL did not start in time."
        exit 1

    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: intl #optional
        ini-values: "post_max_size=256M" #optional

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-versions }}

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run test
      env:
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_USER: user
        DB_PASSWORD: root
        DB_NAME: test
      run: vendor/bin/phpunit
